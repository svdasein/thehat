#!/usr/bin/ruby
##########################################################################
# This is in a very early stage of development
#
# This script reads a Gnome Planner ( https://github.com/GNOME/planner )
# file and converts it to a TheHat flow file. 
#
# The notes field is overloaded to fill in the blanks that 
# planner doesn't support, syntax is (will be) yaml-ish
#
# usage:
# 
# planner-to-flow <thehatconfig> <plannerfile> <newflowfile>
#
##########################################################################

require 'rubygems'
require 'xmlsimple'
require 'pp'

# TheHat modules
require_relative 'wfengine'

workflow = Workflow.new(ARGV[0]) # workflow config file e.g. example.yaml
plan = XmlSimple.xml_in(ARGV[1]) # full path to planner file
tasks = Hash.new
plan['tasks'][0]['task'].each {
	|task|
	tasks[task['id']] = task
}

resources = Hash.new
plan['resources'][0]['resource'].each {
	|resource|
	resources[resource['id']] = resource
}


allocations = Hash.new
plan['allocations'][0]['allocation'].each {
	|allocation|
	allocations[allocation['task-id']] = allocation['resource-id']
}

tasks.each {
	|id,task|
	stepValues = Hash.new
	if task['note']
		task['note'].gsub('\n',"\n").split("\n").each {
			|note|
			key,value = note.split(':')
			stepValues[key] = value
		}
	end
	if stepValues['group']
		stepValues['group'] = stepValues['group'].split(',')
	end
	stepValues['name'] = "task#{id.to_s}"
	if allocations[id.to_s]
		stepValues['owner'] = resources[allocations[id.to_s]]['name']
	end
	if task['predecessors']
		gates = Array.new
		task['predecessors'][0]['predecessor'].each {
			|predecessor|
			gates.push("task#{predecessor['predecessor-id']}")
		}
		stepValues['gates'] = gates
	end
	# NOTE: api needs to change to simplify this
	workflow.steps[stepValues['name']]=Step.new(workflow,stepValues['name'],stepValues)
}
workflow.saveToFile(ARGV[2]) # full path to new flow file

